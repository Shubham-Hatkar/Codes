// Array Pair Sum Divisibility Problem

class Solution {
    public boolean canPair(int[] nums, int k) 
    {
        int n = nums.length;
        Map<Integer,Integer> hm = new HashMap<>();
        int count = 0;
        
        for(int i=0; i<n; i++)
        {
            int rem = nums[i] % k;
            
            if(rem==0 && hm.containsKey(rem) && hm.get(rem) > 0 ) 
            {
                count++;
                hm.put(rem, hm.getOrDefault(rem,0) -1);
            }
            
            else if(hm.containsKey(k-rem) && hm.get(k - rem) > 0)
            {
                count++;
                hm.put(k-rem, hm.getOrDefault(k-rem,0) -1);
            }
            
            else hm.put(rem, hm.getOrDefault(rem,0)+1);
        }
        return (count == n/2);
    }
}
