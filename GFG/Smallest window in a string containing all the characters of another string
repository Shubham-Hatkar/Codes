// Smallest window in a string containing all the characters of another string

class Solution
{
    //Function to find the smallest window in the string s consisting
    //of all the characters of string p.
    public static boolean isSatisfied(int sfreq[], int pfreq[])
    {
        for(int i=0; i<123; i++)
        {
            if(pfreq[i] > sfreq[i]) return false;
        }
        return true;
    }
    public static String smallestWindow(String s, String p)
    {
        int n = s.length(); // length of s string
        int start = 0;
        int end = 0;
        int ans = Integer.MAX_VALUE;
        int ansStart = -1;
        int ansEnd = -1;
        
        // first calculate the freq of each char of p string
        int pfreq[] = new int[123]; //(a -> z == 97 -> 122)
        for(int i=0; i<p.length(); i++) pfreq[p.charAt(i)]++;
        
        // freq array for s string
        int sfreq[] = new int[123];
        
        while(end < n)
        {
            sfreq[s.charAt(end)]++;
            end++;
            
            while(start < end && isSatisfied(sfreq,pfreq))
            {
                if(ans > end - start) 
                {
                    ans = end-start;
                    ansStart = start;
                    ansEnd = end;
                }
                
                //decrease the freq of sfreq array
                sfreq[s.charAt(start)]--;
                start++;
            }
        }
        return (ansStart == -1) ? "-1" : s.substring(ansStart,ansEnd);
    }
}
