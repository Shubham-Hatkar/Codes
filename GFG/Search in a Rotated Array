// Search in a Rotated Array

class Solution
{
    int maxElementIdx(int arr[])
    {
        int n = arr.length;
        int start = 0;
        int end = n-1;
        
        while(start <= end)
        {
            int mid = (start + end) / 2;
            
            if(mid+1 < n && arr[mid] > arr[mid+1]) return mid;
            
            else if(arr[start] <= arr[mid]) start = mid + 1;
            else end = mid - 1;
        }
        return n-1;
    }
    int BS(int arr[], int start, int end, int target)
    {
        while(start <= end)
        {
            int mid = (start + end) / 2;
            if(arr[mid] == target) return mid;
            else if(arr[mid] > target) end = mid - 1;
            else start = mid + 1;
        }
        return -1;
    }
    int search(int A[], int start, int end, int key)
    {
        int maxIdx = maxElementIdx(A);
        if(A[maxIdx] == key) return maxIdx;
        if(key >= A[start] && key <= A[maxIdx]) return BS(A, 0, maxIdx, key);
        return BS(A, maxIdx+1, end, key);
    }
}
