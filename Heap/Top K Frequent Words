// 692. Top K Frequent Words
// https://leetcode.com/problems/top-k-frequent-words/description/

class Solution 
{
    public List<String> topKFrequent(String[] words, int k) 
    {
        HashMap<String, Integer> hm = new HashMap<>();
        for(String w : words) hm.put(w, hm.getOrDefault(w, 0) + 1);
        
        PriorityQueue<String> pq = new PriorityQueue<>(
            (String a, String b) -> {
            // compareTo method compare two string lexicographically order
            if(hm.get(a) == hm.get(b)) return b.compareTo(a); 
            return hm.get(a) - hm.get(b);
        });

        for(String key : hm.keySet())
        {
            pq.add(key);
            if(pq.size() > k) pq.remove(); // top k Strings
        }

        List<String> ans = new ArrayList<>();
        while(pq.size() > 0) ans.add(pq.remove());

        Collections.reverse(ans); // need top k most frequent elements

        return ans;
    }
}
