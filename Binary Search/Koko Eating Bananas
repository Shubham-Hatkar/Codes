// 875. Koko Eating Bananas
// https://leetcode.com/problems/koko-eating-bananas/description/

class Solution 
{
    private boolean isPossible(int piles[], int ICanEat, int hours)
    {
        int count = 0;
        for(int i = 0; i < piles.length; i++)
        {
           count += (piles[i] / ICanEat);
           if(piles[i] % ICanEat != 0) count++;
        }
        return (count <= hours);
    }
    public int minEatingSpeed(int[] piles, int h) 
    {
        int start = 1;
        int end = Integer.MAX_VALUE;
        int ans = -1;
        while(start <= end)
        {
            int mid = start + ((end - start)/2);
            if(isPossible(piles, mid, h))
            {
                ans = mid;
                end = mid - 1;
            }
            else start = mid + 1;
        }
        return ans;
    }
}
