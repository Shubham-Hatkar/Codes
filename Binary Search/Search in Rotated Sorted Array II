//  Search in Rotated Sorted Array II
// https://leetcode.com/problems/search-in-rotated-sorted-array-ii/description/

class Solution 
{
    public boolean search(int[] nums, int target) 
    {
        int n = nums.length;
        int start = 0;
        int end = n - 1;

        while(start <= end)
        {
            int mid = (start + end) /2 ;

            if(nums[mid] == target) return true;
            if(nums[mid] == nums[start] && nums[mid] == nums[end])
            {
                start++;
                end--;
            }
            else if(nums[mid] >= nums[start])
            {
                if(target >= nums[start] && target < nums[mid]) end = mid - 1;
                else start = mid + 1;
            }
            else
            {
                if(target > nums[mid] && target <= nums[end]) start = mid + 1;
                else end = mid - 1;
            }
        }
        return false;
    }
}
