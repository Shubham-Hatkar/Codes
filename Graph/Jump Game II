// 45. Jump Game II
// https://leetcode.com/problems/jump-game-ii/description/

class Solution 
{
    public int jump(int[] nums) 
    {
        int n = nums.length;

        boolean vis[] = new boolean[n];
        Queue<Integer> q = new LinkedList<>();
        q.add(0);
        vis[0] = true;

        int level = 0;
        while(!q.isEmpty())
        {
            int size = q.size();
            for(int i = 0; i < size; i++)
            {
                int idx = q.remove();

                if(idx == n-1) return level;

                for(int j = 0; j <= nums[idx]; j++)
                {
                    if(idx + j < n && vis[idx + j] == false)
                    {
                        q.add(idx + j);
                        vis[idx + j] = true;
                    }
                }
            }
            level++;
        }
        return -1;
    }
}
