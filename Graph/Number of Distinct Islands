// Number of Distinct Islands
// https://practice.geeksforgeeks.org/problems/number-of-distinct-islands/1

class Solution 
{
    private String island;
    private int dir[][] = {{-1,0}, {0,1}, {1,0}, {0,-1}};
    private String str[] = {"T", "R", "B", "L"};
    
    private void dfs(int sr, int sc, int grid[][], boolean vis[][])
    {
        int n = grid.length;
        int m = grid[0].length;
        
        vis[sr][sc] = true;
        
        for(int i = 0; i < 4; i++)
        {
            int nr = sr + dir[i][0];
            int nc = sc + dir[i][1];
            
            if(nr >= n || nc >= m || nr < 0 || nc < 0) continue;
            
            if(vis[nr][nc] == false && grid[nr][nc] == 1)
            {
                island += str[i];
                dfs(nr, nc, grid, vis);
            }
        }
        island += "X";
    }
    int countDistinctIslands(int[][] grid) 
    {
        int n = grid.length;
        int m = grid[0].length;
        
        boolean vis[][] = new boolean[n][m];
        Map<String,Integer> hm = new HashMap<>();
        for(int i = 0; i < n; i++)
        {
            for(int j = 0; j < m; j++)
            {
                if(vis[i][j] == false && grid[i][j] == 1)
                {
                    island = "";
                    dfs(i, j, grid, vis);
                    hm.put(island,1);
                }
            }
        }
        return hm.size();
    }
}
