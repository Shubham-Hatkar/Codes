// 16. 3Sum Closest
// https://leetcode.com/problems/3sum-closest/description/

class Solution 
{
    public int threeSumClosest(int[] nums, int target) 
    {
        Arrays.sort(nums);
        int n = nums.length;
        int diff = Integer.MAX_VALUE;
        int ans = 0;

        for(int i = 0; i < n-2; i++)
        {
            while(i < n && i > 0 && nums[i] == nums[i-1]) i++;

            int j = i + 1;
            int k = n - 1;
            while(j < k)
            {
                int sum = nums[i] + nums[j] + nums[k];
                if(Math.abs(target - sum) < diff) 
                {
                    ans = sum;
                    diff = Math.abs(target - sum);
                }
                if(sum == target)
                {
                    return sum;
                }
                else if(sum < target)
                {
                    j++;
                    while(j < k && nums[j-1] == nums[j]) j++;
                }
                else
                {
                    k--;
                    while(k > j && nums[k] == nums[k+1]) k--;
                }
            }
        }
        return ans;
    }
}
