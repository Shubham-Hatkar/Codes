// 15. 3Sum
// https://leetcode.com/problems/3sum/


class Solution {
    public List<List<Integer>> threeSum(int[] arr) 
    {
        int n = arr.length;
        List<List<Integer>> A = new ArrayList<>();
        Arrays.sort(arr);
        for(int i=0; i<n-2; i++)
        {
            while(i<n && i>0 && arr[i]==arr[i-1])
            {
                i++;
            }
            
            int j = i+1;
            int k = n-1;
            while(j<k)
            {
                int sum = arr[i] + arr[j] + arr[k];
                if(sum==0)
                {
                    List<Integer> B = new ArrayList<>();
                    B.add(arr[i]);
                    B.add(arr[j]);
                    B.add(arr[k]);
                    A.add(B);
                    j++;
                    k--;
                    while(k>j && arr[k]==arr[k+1])
                        {
                            k--;
                        }
                    while(j<k && arr[j]==arr[j-1])
                        {
                            j++;
                        }
                }
                else if(sum>0)
                {
                    k--;
                }
                else
                {
                    j++;
                }
            }
        }
        return A;
    }
}
