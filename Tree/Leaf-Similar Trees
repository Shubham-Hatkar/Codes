// 872. Leaf-Similar Trees
// https://leetcode.com/problems/leaf-similar-trees/description/

class Solution 
{
    void leafNodes(TreeNode root, ArrayList<Integer> path)
    {
        if(root == null) return ;
        if(root.left == null && root.right == null)
        {
            path.add(root.val);
            return;
        }
        leafNodes(root.left, path);
        leafNodes(root.right, path);
    }
    public boolean leafSimilar(TreeNode root1, TreeNode root2) 
    {
        ArrayList<Integer> path1 = new ArrayList<>();
        leafNodes(root1,path1);
        ArrayList<Integer> path2 = new ArrayList<>();
        leafNodes(root2,path2);
        if(path1.size() != path2.size()) return false;
        for(int i=0; i<path1.size(); i++)
        {
            if(path1.get(i) != path2.get(i)) return false;
        }
        return true;
    }
}
