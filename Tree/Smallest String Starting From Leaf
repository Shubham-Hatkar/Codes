// 988. Smallest String Starting From Leaf
// https://leetcode.com/problems/smallest-string-starting-from-leaf/description/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution 
{
    private String minimum(String left, String right)
    {
        String ans = "";
        for(int idx = 0 ; idx < Math.min(left.length(), right.length()) ; idx++)
        {
            if(left.charAt(idx) < right.charAt(idx)) return left;
            else if(left.charAt(idx) > right.charAt(idx)) return right;
        }
        if(left.length() > right.length()) return right;
        return left;
    }
    private String solve(TreeNode root, String path)
    {
        if(root == null) return "{";
        if(root.left == null && root.right == null)
        {
            path = (char)('a' + root.val) + path;
            return path;
        }
        String left = solve(root.left, (char)('a' + root.val) + path);
        String right = solve(root.right, (char)('a' + root.val) + path);
        return minimum(left, right);
    }
    public String smallestFromLeaf(TreeNode root) 
    {
        return solve(root, "");
    }
}
