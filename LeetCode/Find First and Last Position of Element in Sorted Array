// Leetcode -  34. Find First and Last Position of Element in Sorted Array
// https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/description/

class Solution 
{
    // first 
    public int FirstOccurance(int arr[], int target, int n)
    {
        int start = 0;
        int end = n-1;
        int ans = -1;

        while(start <= end)
        {
            int mid = (start+end)/2;

            if(arr[mid] == target) 
            {
                ans = mid;
                end = mid - 1;
            }
            else if(arr[mid] < target) start = mid + 1;
            else end = mid - 1;
        }
        return ans;
    }
    public int LastOccurance(int arr[], int target, int n)
    {
        int start = 0;
        int end = n-1;
        int ans = -1;

        while(start <= end)
        {
            int mid = (start+end)/2;

            if(arr[mid] == target)
            {
                ans = mid;
                start = mid + 1;
            }
            else if(arr[mid] < target) start = mid + 1;
            else end = mid - 1;
        }
        return ans;
    }
    public int[] searchRange(int[] nums, int target) 
    {
        int n = nums.length;
        int first = FirstOccurance(nums,target,n);
        int last = LastOccurance(nums,target,n);
        int ans[] = {first,last};
        return ans;
    }
}
