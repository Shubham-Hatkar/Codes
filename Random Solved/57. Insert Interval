// 57. Insert Interval
// https://leetcode.com/problems/insert-interval/description/

class Solution {
    public int[][] insert(int[][] intervals, int[] newInterval) 
    {
       PriorityQueue<int[]> pq = new PriorityQueue<>((a, b) -> (a[0] - b[0]));

       for(int i = 0; i < intervals.length; i++)
            pq.add(new int[]{intervals[i][0],intervals[i][1]});

       pq.add(newInterval);

       int temp[] = pq.remove();
       int prevStart = temp[0];
       int prevEnd = temp[1];

       ArrayList<Integer> list = new ArrayList<>();
       while(!pq.isEmpty())
       {
           int idx[] = pq.remove();

           int currStart = idx[0];
           int currEnd = idx[1];

           if(currStart <= prevEnd)
                prevEnd = Math.max(prevEnd,currEnd);

           else
           {
               list.add(prevStart);
               list.add(prevEnd);
               prevStart = currStart;
               prevEnd = currEnd;
           }
       }
       list.add(prevStart);
       list.add(prevEnd);

        int ans[][] = new int[list.size()/2][2];
        int j = 0;
        int i = 0;
        while(i < list.size()/2)
        {
            ans[i][0] = list.get(j++);
            ans[i][1] = list.get(j++);
            i++;
        }
        return ans;
    }
}
