// Maximum Sub Array
// https://practice.geeksforgeeks.org/problems/maximum-sub-array5443/1?utm_source=gfg&utm_medium=article&utm_campaign=bottom_sticky_on_article

class Pair
{
    int len;
    int start;
    int end;
    Pair(int len, int start, int end)
    {
        this.len = len;
        this.start = start;
        this.end = end;
    }
}
class Solution {

    ArrayList<Integer> findSubarray(int arr[], int n) 
    {
        Map<Integer,Pair> hm = new HashMap<>();
        int i = 0;
        int sum = 0;
        int maxSum = -1;
        int maxlen = -1;
        while(i < n)
        {
            int len = 0;
            int start = i;
            sum = 0;
            boolean flag = false;
            while(i < n && arr[i] >= 0)
            {
                flag = true;
                sum += arr[i];
                len++;
                i++;
            }
            
            if(sum > maxSum) 
            {
                maxSum = sum;
                maxlen = len;
                Pair obj = new Pair(len, start, i);
                hm.put(sum, obj);
            }
            else if(len > maxlen && sum == maxSum)
            {
                maxlen = len;
                Pair obj = new Pair(len, start, i);
                hm.put(sum, obj);
            }
            
            sum = 0;
            if(flag == false) i++;
        }
        
        Pair info = hm.get(maxSum);
        int start = info.start;
        int end = info.end;
        ArrayList<Integer> ans = new ArrayList<>();
        for(int j = start; j < end; j++) ans.add(arr[j]);

        return ans;
    }
}
